{"ast":null,"code":"var _jsxFileName = \"/home/pk4548/pk/pk/codes/dijekstra_pathfinding/Pathfinding-Visualizer-Tutorial-master/src/PathfindingVisualizer/Page1.jsx\";\nimport './page1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page1 = ({\n  toogle\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to pathfinding Visualizer!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This short tutorial will walk you through all of the features of this application.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"At its core, pathfinding algorithm seeks to find the shortest path between two points. This application visualizes the Dijkstra's pathfinding algorithms in action,and more!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"path.jpeg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The algorithm on this application are adapted for a 2D grid , where 90 degree turns have a \\\"cost\\\" of 1 and movements from a node to another node have a \\\"cost\\\" of 1.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toogle,\n          children: \" Visit application \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Page1;\nexport default Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Page1","toogle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/pk4548/pk/pk/codes/dijekstra_pathfinding/Pathfinding-Visualizer-Tutorial-master/src/PathfindingVisualizer/Page1.jsx"],"sourcesContent":["\nimport './page1.css';\nconst Page1 = ({toogle}) => {\n    \n  return (\n    \n    <div className=\"page1\">\n        <div className=\"nav\">\n        <h1>Welcome to pathfinding Visualizer!</h1>\n        </div>\n       <div className='content'>\n        <div className='text'>\n        <h2>\n            This short tutorial will walk you through all of the features of this application.  \n        </h2>\n        <h3>\n        At its core, pathfinding algorithm seeks to \n        find the shortest path between two points.\n        This application visualizes the Dijkstra's pathfinding algorithms in action,and more!\n        </h3>\n        <div className='image'>\n            <img src=\"path.jpeg\" alt=\"\" />\n        </div>\n        <p>\n            The algorithm on this application are adapted for a 2D grid ,\n            where 90 degree turns have a \"cost\" of 1 and movements from a node to another node \n            have a \"cost\" of 1.\n        </p>\n        \n        </div>\n        \n        <div className='btn'>\n            <button onClick={toogle}> Visit application </button>\n        </div>\n       </div>\n    </div>\n  )\n}\n\nexport default Page1"],"mappings":";AACA,OAAO,aAAa;AAAC,SAAAA,MAAA,IAAAC,OAAA;AACrB,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAE1B,oBAEEF,OAAA;IAAKG,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBJ,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAC,QAAA,eACpBJ,OAAA;QAAAI,QAAA,EAAI;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACPR,OAAA;MAAKG,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACvBJ,OAAA;QAAKG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACrBJ,OAAA;UAAAI,QAAA,EAAI;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLR,OAAA;UAAAI,QAAA,EAAI;QAIJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLR,OAAA;UAAKG,SAAS,EAAC,OAAO;UAAAC,QAAA,eAClBJ,OAAA;YAAKS,GAAG,EAAC,WAAW;YAACC,GAAG,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACNR,OAAA;UAAAI,QAAA,EAAG;QAIH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC,eAENR,OAAA;QAAKG,SAAS,EAAC,KAAK;QAAAC,QAAA,eAChBJ,OAAA;UAAQW,OAAO,EAAET,MAAO;UAAAE,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAI,EAAA,GAnCKX,KAAK;AAqCX,eAAeA,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}